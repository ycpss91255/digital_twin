	component sopc is
		port (
			clk_clk                          : in    std_logic                     := 'X';             -- clk
			reset_reset_n                    : in    std_logic                     := 'X';             -- reset_n
			memclk_clk                       : out   std_logic;                                        -- clk
			areset_export                    : in    std_logic                     := 'X';             -- export
			locked_export                    : out   std_logic;                                        -- export
			phasedone_export                 : out   std_logic;                                        -- export
			sdram_wire_addr                  : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_wire_ba                    : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n                 : out   std_logic;                                        -- cas_n
			sdram_wire_cke                   : out   std_logic;                                        -- cke
			sdram_wire_cs_n                  : out   std_logic;                                        -- cs_n
			sdram_wire_dq                    : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm                   : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_wire_ras_n                 : out   std_logic;                                        -- ras_n
			sdram_wire_we_n                  : out   std_logic;                                        -- we_n
			ledg_export                      : out   std_logic_vector(3 downto 0);                     -- export
			epcs_dclk                        : out   std_logic;                                        -- dclk
			epcs_sce                         : out   std_logic;                                        -- sce
			epcs_sdo                         : out   std_logic;                                        -- sdo
			epcs_data0                       : in    std_logic                     := 'X';             -- data0
			uart0_rxd                        : in    std_logic                     := 'X';             -- rxd
			uart0_txd                        : out   std_logic;                                        -- txd
			switch_export                    : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			bitton_export                    : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- export
			clk200m_clk                      : out   std_logic;                                        -- clk
			sclk3m_clk                       : out   std_logic;                                        -- clk
			motordriverreg_iIMUAcc           : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iIMUAcc
			motordriverreg_iIMUGYro          : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iIMUGYro
			motordriverreg_iIMUMagn          : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iIMUMagn
			motordriverreg_iMotorClk         : in    std_logic                     := 'X';             -- iMotorClk
			motordriverreg_oPWMduty          : out   std_logic_vector(31 downto 0);                    -- oPWMduty
			motordriverreg_oMotorDir         : out   std_logic_vector(31 downto 0);                    -- oMotorDir
			motordriverreg_iMotorFifoStatus  : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorFifoStatus
			motordriverreg_iMotorA_Encoder   : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorA_Encoder
			motordriverreg_iMotorA_Speed     : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorA_Speed
			motordriverreg_iMotorA_Sensor    : in    std_logic_vector(33 downto 0) := (others => 'X'); -- iMotorA_Sensor
			motordriverreg_iMotorB_Encoder   : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorB_Encoder
			motordriverreg_iMotorB_Speed     : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorB_Speed
			motordriverreg_iMotorB_Sensor    : in    std_logic_vector(33 downto 0) := (others => 'X'); -- iMotorB_Sensor
			motordriverreg_iMotorC_Encoder   : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorC_Encoder
			motordriverreg_iMotorC_Speed     : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorC_Speed
			motordriverreg_iMotorC_Sensor    : in    std_logic_vector(33 downto 0) := (others => 'X'); -- iMotorC_Sensor
			motordriverreg_iMotorD_Encoder   : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorD_Encoder
			motordriverreg_iMotorD_Speed     : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorD_Speed
			motordriverreg_iMotorD_Sensor    : in    std_logic_vector(33 downto 0) := (others => 'X'); -- iMotorD_Sensor
			motordriverreg_iMotorFBDirection : in    std_logic_vector(31 downto 0) := (others => 'X'); -- iMotorFBDirection
			motordriverreg_oMotorCtrl        : out   std_logic_vector(31 downto 0)                     -- oMotorCtrl
		);
	end component sopc;

